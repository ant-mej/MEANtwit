// Generated by CoffeeScript 1.6.3
// Couldn't get JSFiddle to work with CoffeeScript as advertised - Link to CoffeeScript Gist: https://gist.github.com/lsiv568/5623361

    angular.module('articles').directive('fileDropzone',['$http','Authentication','Articles', function( $http, Authentication,Articles) {
        return {
            scope:true,
            restrict: 'A',
            scope: {
                file: '=',
                fileName: '='
            },
            link: function(scope, element, attrs) {
                var checkSize, isTypeValid, processDragOverOrEnter, validMimeTypes;
                processDragOverOrEnter = function(event) {
                    if (event != null) {
                        event.preventDefault();
                    }
                    event.dataTransfer.effectAllowed = 'copy';
                    return false;
                };
                validMimeTypes = attrs.fileDropzone;
                checkSize = function(size) {
                    var _ref;
                    if (((_ref = attrs.maxFileSize) === (void 0) || _ref === '') || (size / 1024) / 1024 < attrs.maxFileSize) {
                        return true;
                    } else {
                        alert("File must be smaller than " + attrs.maxFileSize + " MB");
                        return false;
                    }
                };
                isTypeValid = function(type) {
                    if ((validMimeTypes === (void 0) || validMimeTypes === '') || validMimeTypes.indexOf(type) > -1) {
                        return true;
                    } else {
                        alert("Invalid file type.  File must be one of following types " + validMimeTypes);
                        return false;
                    }
                };

                var _filepath = '/uploads/'; //path.resolve('public/uploads/', 'uploads');



                function decodeBase64Image(dataString) {
                    var matches = dataString.match(/^data:([A-Za-z-+\/]+);base64,(.+)$/),
                        response = {};

                    if (matches.length !== 3) {
                        return new Error('Invalid input string');
                    }
                    response.type = matches[1];
                   // response.data = new Buffer(matches[2], 'base64');
                    return response;
                }
                element.bind('dragover', processDragOverOrEnter);
                element.bind('dragenter', processDragOverOrEnter);
                return element.bind('drop', function(event) {
                    var file, name, reader, size, type;
                    if (event != null) {
                        event.preventDefault();
                    }
                   // console.log(scope);
                    reader = new FileReader();
                    reader.onload = function(evt) {
                        if (checkSize(size) && isTypeValid(type)) {
                            return scope.$apply(function() {
                                scope.file = evt.target.result;
                                reader.append('image',  scope.file);

                                var imageName = document.getElementById('image_name').innerHTML;
                                scope.fileName = imageName;
                                var imgName = imageName+ '.png';
                                var _newPath = _filepath + '/' + imgName;
                                //var dbPath = fullUrl + '/uploads/' + imgName;
                               // var imageContent = decodeBase64Image(scope.file);
                                var imageContent  = scope.file.replace(/^data:image\/png;base64,/, "");
                                data = {name: imgName,
                                    status: imageContent};
                                var xhr = new XMLHttpRequest();
                                xhr.open("POST", "/uploadfile");
                                xhr.addEventListener("load", uploadComplete, false);

                                xhr.send(reader);
                                function uploadComplete(evt){
                                    console.log(evt);
                                }
                                console.log(scope);
                               // var fs = req.app.get('fs');
                                // venue.image = dbPath;

                                //console.log(scope.file);
                                if (angular.isString(scope.fileName)) {
                                    return scope.fileName = name;
                                }
                            });
                        }
                    };
                    file = event.dataTransfer.files[0];
                    name = file.name;
                    type = file.type;
                    size = file.size;
                    reader.readAsDataURL(file);
                    return false;
                });
            }
        };
    }]);


